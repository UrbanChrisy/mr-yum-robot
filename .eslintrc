{
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "wrap-props"
  ],
  "extends": [
    "airbnb-base",
    "airbnb-typescript/base",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "airbnb/hooks",
    "prettier"
  ],
  "ignorePatterns": [
    "vite.config.ts"
  ],
  "rules": {
    "no-void": "off",
    "quotes": "off",
    "@typescript-eslint/quotes": ["error", "double"],
    "indent": "off",
    "@typescript-eslint/indent": [
      "error",
      "tab"
    ],
    "semi": "off",
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": "off",
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "object-shorthand": [
      "error",
      "always"
    ],
    "react/jsx-filename-extension": "off",
    "react/prop-types": "off",
    "react/no-unused-prop-types": "off",
    "import/no-cycle": "off",
    "import/no-extraneous-dependencies": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "import/no-named-as-default": "off",
    "@typescript-eslint/no-redeclare": [
      "warn",
      {
        "ignoreDeclarationMerge": true
      }
    ],
    "react-hooks/exhaustive-deps": [
      "warn",
      {
        "additionalHooks": "useTrackedCallback"
      }
    ],
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/default-param-last": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "{}": true
        },
        "extendDefaults": true
      }
    ],
    "import/extensions": "off",
    "wrap-props/wrap-function-props":       ["error"],
    "wrap-props/wrap-function-arguments":   ["error"],
    "wrap-props/wrap-jsx-props":            ["error", { "maxLength": 120, "maximum": { "single": 1, "when": "multiline" } }],
    "wrap-props/unwrap-function-props":     ["error"],
    "wrap-props/unwrap-function-arguments": ["error"],
    "wrap-props/unwrap-jsx-props":          ["error"]
  }
}
